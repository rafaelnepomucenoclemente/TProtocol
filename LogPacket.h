/*
 *	LogPacket.h
 *
 */
#pragma once
#include <oledb.h>


#define		MAX_BUF_SIZE			1024

/*
 *	UDP Packet
 */
typedef struct
{		
	WORD	dwSize;
	WORD	dwCommand;
	void	*pSocketFD;
	DWORD	dwSeq ;
	WORD    wCheckSum ;
	char	szIP[20];
	WORD	wPort;
	char	szPacket[ MAX_BUF_SIZE ];
}  _UDPPACKET, *_LPUDPPACKET ;



/*
 *	Log Format
 */
typedef struct	
{
	DBTIMESTAMP	tTimeStamp;				//	Time Stamp
	DWORD		dwServerID;				//	Server ID
	CHAR		szClientIP[16];			//	Client		
	DWORD		dwAction;				//	Log Command

	WORD		wMapID;					//	Map ID
	int			nX;						//		X
	int			nY;						//		Y
	int			nZ;						//		Z

	__int64		dwKey[11];				//	Search Key
	CHAR		szKey[7][50];			//	Search Key	(String)


	DWORD		dwFormat;				//	Log Format
	CHAR		szLog[512];				//	Binary
} _LOG_DATA_, *_LPLOG_DATA_;


/*
 *	Chatting Log
 */
typedef struct  
{
	DWORD	dwServerID;					//	Server ID
	DWORD	dwMapID;					//	Map ID
	BYTE	nChatType;					//	Chatting Type
	CHAR	szPlayerIDFrom[20];			//	From Name
	CHAR	szPlayerIDTo[20];			//	To Name
	CHAR	szChatMessage[256];			//	Chatting Message
}	LOGCHAT, *_LPLOGCHAT;


/*
 *	Log Server Protocol
 */
enum LOG_PROTOCOL
{
	LP_LOG		,
	LP_CHAT		,

	LP_COUNT
};


/*
 *	Log Format
 */
enum LOG_FORMAT
{
	LF_TEXT		,
	LF_CHARBASE	,
	LF_ITEM		,
	LF_SKILL	,
	LF_PET
};

/*
 *	Log Action
 */
#define LOG_BASELOGIN			0x0000		//	Login Server
#define	LOG_BASEMAP				0x1000		//	Map	Server
#define	LOG_BASEWORLD			0x2000		//	World Server


//
//	Login
//
#define	LOGLOGIN_LOGIN			LOG_BASELOGIN	+ 0x0000

#define	LOGLOGIN_CHARCREATE		LOG_BASELOGIN	+ 0x0004
#define	LOGLOGIN_CHARDELETE		LOG_BASELOGIN	+ 0x0005

#define	LOGLOGIN_GAMESTART		LOG_BASELOGIN	+ 0x0008

//
//	Map
//
#define LOGMAP_ENTERMAP				LOG_BASEMAP		+ 0x0010
#define LOGMAP_LEVELUP				LOG_BASEMAP		+ 0x0013
#define LOGMAP_USERDIE				LOG_BASEMAP		+ 0x0015

#define LOGMAP_MONSPAWN				LOG_BASEMAP		+ 0x0020
#define LOGMAP_MONDIE				LOG_BASEMAP		+ 0x0021
#define	LOGMAP_MONMONEYSOLOE		LOG_BASEMAP		+ 0x0022
#define	LOGMAP_MONMONEYPARTY		LOG_BASEMAP		+ 0x0023
#define LOGMAP_MONEXPSOLO			LOG_BASEMAP		+ 0x0024
#define LOGMAP_MONEXPPARTY			LOG_BASEMAP		+ 0x0025

#define	LOGMAP_ITEMBYMONSOLO		LOG_BASEMAP		+ 0x0030
#define	LOGMAP_ITEMBYMONPARTY		LOG_BASEMAP		+ 0x0031
#define	LOGMAP_ITEMBYWORLD			LOG_BASEMAP		+ 0x0032

#define	LOGMAP_ITEMDEL				LOG_BASEMAP		+ 0x0034
#define	LOGMAP_ITEMBUY				LOG_BASEMAP		+ 0x0035
#define	LOGMAP_ITEMSELL				LOG_BASEMAP		+ 0x0036
#define LOGMAP_ITEMUSE				LOG_BASEMAP		+ 0x0037

#define	LOGMAP_ITEMUPGRADESUCCESS	LOG_BASEMAP		+ 0x0040
#define	LOGMAP_ITEMUPGRADEFAILDEL	LOG_BASEMAP		+ 0x0041

#define LOGMAP_ITEMMAKESUCCESS		LOG_BASEMAP		+ 0x0042
#define	LOGMAP_ITEMMAKEZERO			LOG_BASEMAP		+ 0x0043
#define	LOGMAP_ITEMMAKEFAILDEL		LOG_BASEMAP		+ 0x0044

#define LOGMAP_ITEMDOWNGRADESUCCESS	LOG_BASEMAP		+ 0x0045
#define LOGMAP_ITEMDOWNGRADEFAIL	LOG_BASEMAP		+ 0x0046


#define	LOGMAP_ITEMCABINETIN		LOG_BASEMAP		+ 0x0050
#define	LOGMAP_ITEMCABINETOUT		LOG_BASEMAP		+ 0x0051
#define LOGMAP_ITEMCABINETMAKE		LOG_BASEMAP		+ 0x0052

#define	LOGMAP_ITEMTRADERECV		LOG_BASEMAP		+ 0x0055
#define	LOGMAP_ITEMTRADESEND		LOG_BASEMAP		+ 0x0056
#define	LOGMAP_MONEYTRADERECV		LOG_BASEMAP		+ 0x0057
#define	LOGMAP_MONEYTRADESEND		LOG_BASEMAP		+ 0x0058

#define	LOGMAP_ITEMPOSTSEND			LOG_BASEMAP		+ 0x0060
#define	LOGMAP_ITEMPOSTGET			LOG_BASEMAP		+ 0x0061
#define	LOGMAP_MONEYPOSTSEND		LOG_BASEMAP		+ 0x0062
#define	LOGMAP_MONEYPOSTGET			LOG_BASEMAP		+ 0x0063

#define	LOGMAP_ITEMPOSTDEL			LOG_BASEMAP		+ 0x0064
#define	LOGMAP_MONEYPOSTDEL			LOG_BASEMAP		+ 0x0065


#define LOGMAP_STOREITEMSELL		LOG_BASEMAP		+ 0x0070
#define LOGMAP_STOREITEMBUY			LOG_BASEMAP		+ 0x0071
#define LOGMAP_STOREITEMDELL		LOG_BASEMAP		+ 0x0072

#define LOGMAP_ITEMDURATIONEND		LOG_BASEMAP		+ 0x0075
#define LOGMAP_ITEMREPAIRSUCCESS	LOG_BASEMAP		+ 0x0076

#define LOGMAP_ITEMREFINEDEL		LOG_BASEMAP		+ 0x0077
#define LOGMAP_ITEMREFINESUCCESS	LOG_BASEMAP		+ 0x0078
#define LOGMAP_ITEMREFINEFAIL		LOG_BASEMAP		+ 0x0079


//
//	QUEST
//
#define LOGMAP_QUESTSTART			LOG_BASEMAP		+ 0x0080
#define LOGMAP_QUESTDROP			LOG_BASEMAP		+ 0x0081
#define LOGMAP_QUESTFAILED			LOG_BASEMAP		+ 0x0082
#define LOGMAP_QUESTSUCCESS			LOG_BASEMAP		+ 0x0083
#define LOGMAP_QUESTEXPGET			LOG_BASEMAP		+ 0x0084
#define	LOGMAP_QUESTMONEYGET		LOG_BASEMAP		+ 0x0085

#define	LOGMAP_ITEMQUESTGET			LOG_BASEMAP		+ 0x0086
#define	LOGMAP_ITEMQUESTDEL			LOG_BASEMAP		+ 0x0087

#define	LOGMAP_GAMBLESUCCESS		LOG_BASEMAP		+ 0x0090
#define	LOGMAP_GAMBLEFAIL			LOG_BASEMAP		+ 0x0091
#define	LOGMAP_GAMBLEREPFAIL		LOG_BASEMAP		+ 0x0092

#define	LOGMAP_SEALSUCCESS			LOG_BASEMAP		+ 0x0095
#define	LOGMAP_SEALFAIL				LOG_BASEMAP		+ 0x0096
#define	LOGMAP_SEALREPFAIL			LOG_BASEMAP		+ 0x0097



#define LOGMAP_SKILLBUY				LOG_BASEMAP		+ 0x0100
#define LOGMAP_SKILLLEVELUP			LOG_BASEMAP		+ 0x0101

#define LOGMAP_PETMAKE				LOG_BASEMAP		+ 0x0110
#define LOGMAP_PETDEL				LOG_BASEMAP		+ 0x0111

//
//	CHAT
//
#define LOGMAP_CHATWISPER			LOG_BASEMAP		+ 0x0120
#define LOGMAP_CHATNEAR				LOG_BASEMAP		+ 0x0121
#define LOGMAP_CHATMAP				LOG_BASEMAP		+ 0x0122
#define LOGMAP_CHATWORLD			LOG_BASEMAP		+ 0x0123
#define LOGMAP_CHATPARTY			LOG_BASEMAP		+ 0x0124
#define LOGMAP_CHATGUILD			LOG_BASEMAP		+ 0x0125
#define LOGMAP_CHATFORCE			LOG_BASEMAP		+ 0x0126
#define LOGMAP_CHATOPERATOR			LOG_BASEMAP		+ 0x0127

//
//	MOVE
//
#define LOGMAP_TELEPORT				LOG_BASEMAP		+ 0x0130



#define LOGMAP_LOCALOCCUPY			LOG_BASEMAP		+ 0x0140
#define LOGMAP_LOCALENABLE			LOG_BASEMAP		+ 0x0141

#define	LOGMAP_PVPOINTGAINCHAR		LOG_BASEMAP		+ 0x0150
#define	LOGMAP_PVPOINTUSECHAR		LOG_BASEMAP		+ 0x0151
#define LOGMAP_PVPOINTGAINGUILD		LOG_BASEMAP		+ 0x0152
#define LOGMAP_PVPOINTUSEGUILD		LOG_BASEMAP		+ 0x0153

#define LOGMAP_AUCTIONREG			LOG_BASEMAP		+ 0x0154 //등록
#define LOGMAP_AUCTIONREGCANCEL		LOG_BASEMAP		+ 0x0155 //등록취소
#define LOGMAP_AUCTIONBID			LOG_BASEMAP		+ 0x0156 //입찰
#define LOGMAP_AUCTIONBIDSUCCESS	LOG_BASEMAP		+ 0x0157 //낙찰
#define LOGMAP_AUCTIONBIDFAIL		LOG_BASEMAP		+ 0x0158 //유찰
#define LOGMAP_AUCTIONBIDDROP		LOG_BASEMAP		+ 0x0159 //입찰탈락
#define LOGMAP_AUCTIONBUYDIRECT		LOG_BASEMAP		+ 0x015A //즉구
#define LOGMAP_AUCTIONSUCCESSMONEY	LOG_BASEMAP		+ 0x015B //낙찰가격(수수료제외)


//
//	CASH
//
#define	LOGMAP_CASHITEMBUY			LOG_BASEMAP		+ 0x01A0
#define	LOGMAP_CASHITEMPRESENT		LOG_BASEMAP		+ 0x01A1

#define	LOGMAP_CASHBANKIN			LOG_BASEMAP		+ 0x01A4
#define	LOGMAP_CASHBANKOUT			LOG_BASEMAP		+ 0x01A5

#define LOGMAP_CASHCABINETBUY		LOG_BASEMAP		+ 0x01A8

#define	LOGMAP_CASHCHANGECHAR		LOG_BASEMAP		+ 0x01AA
#define	LOGMAP_CASHRANDMONEY		LOG_BASEMAP		+ 0x01AB

//
//	GUILD
//
#define	LOGMAP_GUILDCREATE			LOG_BASEMAP		+ 0x0200
#define	LOGMAP_GUILDDISORGANIZATION	LOG_BASEMAP		+ 0x0201

#define	LOGMAP_GUILDINVITE			LOG_BASEMAP		+ 0x0202
#define	LOGMAP_GUILDINVITEANSWER	LOG_BASEMAP		+ 0x0203

#define	LOGMAP_GUILDJOIN			LOG_BASEMAP		+ 0x0204

#define	LOGMAP_GUILDLEAVE			LOG_BASEMAP		+ 0x0205
#define	LOGMAP_GUILDKICKOUT			LOG_BASEMAP		+ 0x0206

#define	LOGMAP_GUILDDUTY			LOG_BASEMAP		+ 0x0207
#define	LOGMAP_GUILDPEER			LOG_BASEMAP		+ 0x0208

#define	LOGMAP_GUILDCONTRIBUTION	LOG_BASEMAP		+ 0x0209

#define	LOGMAP_GUILDLEVELUP			LOG_BASEMAP		+ 0x0210

#define	LOGMAP_GUILDCABINETPUTIN	LOG_BASEMAP		+ 0x0211
#define	LOGMAP_GUILDCABINETTAKEOUT	LOG_BASEMAP		+ 0x0212

#define LOGMAP_TACTICSADD			LOG_BASEMAP		+ 0x0213
#define LOGMAP_TACTICSKICKOUT		LOG_BASEMAP		+ 0x0214
#define LOGMAP_TACTICSLEAVE			LOG_BASEMAP		+ 0x0215

//
//	TOURNAMENT
//
#define	LOGMAP_TOURNAMENTAPPLY		LOG_BASEMAP		+ 0x0250
#define	LOGMAP_TOURNAMENTEVENT		LOG_BASEMAP		+ 0x0251
#define	LOGMAP_TOURNAMENTWIN		LOG_BASEMAP		+ 0x0252

#define LOGMAP_RPSGAME				LOG_BASEMAP		+ 0x0253
#define LOGMAP_COUNTRYCHANGE		LOG_BASEMAP		+ 0x0254
#define LOGMAP_AIDCOUNTRYCHANGE		LOG_BASEMAP		+ 0x0255

//	KickOut
#define LOGMAP_KICKOUT				LOG_BASEMAP		+ 0x0256

#define LOGMAP_LOGOUT				LOG_BASEMAP		+ 0x0257
#define LOGMAP_CMGIFT				LOG_BASEMAP		+ 0x0258


/*
 *	Login Server - Char Base Information
 */
typedef struct  
{
	DWORD dwCharID;
	TCHAR szName[20];
	BYTE  bSlot;
	BYTE  bLevel;
	BYTE  bClass;
	BYTE  bRace;
	BYTE  bCountry;
	BYTE  bSex;
	BYTE  bHair;
	BYTE  bFace;
	BYTE  bBody;
	BYTE  bPants;
	BYTE  bHand;
	BYTE  bFoot;
	DWORD dwRegion;
} _LOG_CHARBASE_, *_LPLOG_CHARBASE_;


/*
 *	Item 
 */
typedef struct
{
	__int64	dlID;					//	Unique Number
	BYTE	bInven;					//	인벤 위치
	BYTE	bItemID;				//	인벤 번호

	WORD	wItemID;				//	아이템 INDEX
	TCHAR	szItemName[50];			//	아이템 명

	BYTE	bLevel;					//	업그레이드레벨
	BYTE	bCount;				
	
	BYTE	bGLevel;				//	봉인 아이템 확인용
	DWORD	dwDuraMax;				//	최대 내구도
	DWORD	dwDuraCur;				//	현재 내구도
	
	BYTE	bRefineCur;				//	제력 횟수

	BYTE	bGradeEffect;			//	아이템 강화 속성

	BYTE	bMagic;				//	속성
	WORD	wValue;
    DWORD	dwTime;

	__time64_t	dEndTime;			//	Expired Date

}	_LOG_ITEM_,	*_LPLOG_ITEM_;

/*
*	Skill
*/
typedef struct
{
	DWORD dwCharID;
	TCHAR szName[20];
	WORD  wSkill;
	BYTE  bLevel;
	
}	_LOG_SKILL_, *_LPLOG_SKILL_;

typedef struct
{
	DWORD	dwCharID;
	TCHAR	szName[20];
	DWORD	m_wPetID;
	TCHAR	szPetName[20];
	__int64	m_ldwTime;	
	
}	_LOG_PET_, *_LPLOG_PET_;

